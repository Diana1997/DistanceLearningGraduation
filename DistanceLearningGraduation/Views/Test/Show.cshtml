@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Test</title>
    <link rel="stylesheet" href="~/Content/normalize.min.css">
    <link rel="stylesheet prefetch" href="~/Content/main.css">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body style="    background-color: #f7f3f3c2;">
    <div class="navbar navbar-inverse navbar-fixed-top myHeaderStyle">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @*@Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })*@
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>
                        @Html.ActionLink("Գլխավոր", "Index", "Home")
                    </li>
                    <li>
                        @Html.ActionLink("Մեր մասին", "About", "Home")
                    </li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container1 modal-content bgStyle" style="    width: 82%;margin: auto;">
        <div>
            <img src="~/Images/img2.jpg" />
        </div>
        <div id="quiz1" class="quizStyle"></div>
    </div>


    @*<canvas id="canvas"  class="canvasStyle"></canvas>*@



    <script type="text/javascript" src="~/Scripts/jquery-2.2.4.min.js"></script>
    <script type="text/javascript" src="~/Scripts/main.js"></script>
    <script type="text/javascript" src="~/Scripts/script.js"></script>
</body>
</html>

<style>
    .canvasStyle {
        background-color: #356dc1a3;
        width: 226px;
        border-radius: 24px;
        margin-top: -372px;
        position: absolute;
        margin-left: 901px;
    }




    .container1 {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        background: linear-gradient(to top right, darken(dodgerblue, 10%) 0%, dodgerblue 100%);
    }

    #quiz1 {
        width: 560px;
        background: #fff;
        padding: 2rem;
        border-radius: 3px;
    }
    .quizStyle {
        margin-top: -379px;
        margin-left: -423px;
    }
</style>



<style>
    .bgStyle {
        /*background-image: url(../../Images/bg16.jpg);*/
    }
    
    .myHeaderStyle {
        background-color: #2d3d96;
    }

    .linkStyle {
        color: white;
    }

    .navbar-inverse .navbar-nav > li > a {
        color: white;
    }
</style>


<script>
    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");
    var radius = canvas.height / 2;
    ctx.translate(radius, radius);
    radius = radius * 0.90
    setInterval(drawClock, 1000);

    function drawClock() {
        drawFace(ctx, radius);
        drawNumbers(ctx, radius);
        drawTime(ctx, radius);
    }

    function drawFace(ctx, radius) {
        var grad;
        ctx.beginPath();
        ctx.arc(0, 0, radius, 0, 2 * Math.PI);
        ctx.fillStyle = 'white';
        ctx.fill();
        grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
        grad.addColorStop(0, '#333');
        grad.addColorStop(0.5, 'white');
        grad.addColorStop(1, '#333');
        ctx.strokeStyle = grad;
        ctx.lineWidth = radius * 0.1;
        ctx.stroke();
        ctx.beginPath();
        ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
        ctx.fillStyle = '#333';
        ctx.fill();
    }

    function drawNumbers(ctx, radius) {
        var ang;
        var num;
        ctx.font = radius * 0.15 + "px arial";
        ctx.textBaseline = "middle";
        ctx.textAlign = "center";
        for (num = 1; num < 13; num++) {
            ang = num * Math.PI / 6;
            ctx.rotate(ang);
            ctx.translate(0, -radius * 0.85);
            ctx.rotate(-ang);
            ctx.fillText(num.toString(), 0, 0);
            ctx.rotate(ang);
            ctx.translate(0, radius * 0.85);
            ctx.rotate(-ang);
        }
    }

    function drawTime(ctx, radius) {
        var now = new Date();
        var hour = now.getHours();
        var minute = now.getMinutes();
        var second = now.getSeconds();
        //hour
        hour = hour % 12;
        hour = (hour * Math.PI / 6) +
            (minute * Math.PI / (6 * 60)) +
            (second * Math.PI / (360 * 60));
        drawHand(ctx, hour, radius * 0.5, radius * 0.07);
        //minute
        minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
        drawHand(ctx, minute, radius * 0.8, radius * 0.07);
        // second
        second = (second * Math.PI / 30);
        drawHand(ctx, second, radius * 0.9, radius * 0.02);
    }

    function drawHand(ctx, pos, length, width) {
        ctx.beginPath();
        ctx.lineWidth = width;
        ctx.lineCap = "round";
        ctx.moveTo(0, 0);
        ctx.rotate(pos);
        ctx.lineTo(0, -length);
        ctx.stroke();
        ctx.rotate(-pos);
    }
</script>